package org.symlabs.browser.addentry;

import org.symlabs.wizard.Step;
import org.symlabs.wizard.Wizard;
import java.awt.GridBagConstraints;
import java.util.HashMap;
import javax.swing.JDialog;
import org.apache.log4j.Logger;
import org.symlabs.nodes.LDAPNode;
import org.symlabs.util.Utils;
import org.symlabs.wizard.WizardEvent;

/**
 * <p>Titulo: AddNewEntryDialog </p>
 * <p>Descripcion: Class used to launch the wizard that allos you to create a new ldap entry  </p>
 * <p>Copyright: Emilio Fernandez  2009</p>
 * @author Emilio J. Fernandez Rey
 * @version 1.0
 * @id $Id: AddNewEntryDialog.java,v 1.4 2009-07-27 16:55:15 efernandez Exp $
 */
public class AddNewEntryDialog extends javax.swing.JDialog {

    private Step steps;
    private Wizard newEntryWizard;
    private Handler hndlr;
    /**Attribute that contains the kye used to store the parent node*/
    protected static final String LDAPNODE_KEY = "LDAPNode";
    /**Attribute that contains the selected ldap node*/
    protected LDAPNode ldapNode;
    /**Attribute used to display the debug message*/
    private static Logger logger = Logger.getLogger(AddNewEntryDialog.class);

    /** Creates new form AddNewEntryDialog
     * @param parent
     * @param modal
     * @param currentNode 
     */
    public AddNewEntryDialog(java.awt.Frame parent, boolean modal, LDAPNode currentNode) {
        super(parent, modal);
        this.ldapNode = currentNode;
        this.hndlr = new Handler((javax.swing.JDialog) this);
        initSteps();
        initComponents();
        initWizard();
        updatePanel();
        this.setSize(750, 550);
        this.setTitle("New Entry Dialog");
    }

    private class Handler implements WizardEvent {

        javax.swing.JDialog window;

        private Handler(JDialog jDialog) {
            this.window = jDialog;
        }

        public void onFinish() {
            this.window.dispose();
        }

        public void onCancel() {
            this.window.dispose();
        }
    }

    private void initSteps() {
        HashMap<String, Object> param = new HashMap<String, Object>();
        param.put("initial", "value");
        param.put(LDAPNODE_KEY, this.ldapNode);
        Step step = new AddNewEntryStep1();
        step.setParameters(param);
        this.steps = step;
        step = new AddNewEntryStep2();
        this.steps.newNext(step);
    }

    private void initWizard() {
        this.newEntryWizard = new Wizard("Create New LDAP Entry", this.steps);
        this.newEntryWizard.setEventHandler(hndlr);
    }

    private void updatePanel() {
        GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        this.invalidate();
        this.getContentPane().removeAll();
        this.getContentPane().add(newEntryWizard, gridBagConstraints);
        this.validate();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
