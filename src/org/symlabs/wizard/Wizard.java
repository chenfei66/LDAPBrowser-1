/*
 * Wizard.java
 *
 * Created on October 20, 2008, 7:12 PM
 */
package org.symlabs.wizard;

import java.awt.CardLayout;
import java.awt.GridBagConstraints;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JLabel;

/**
 * Class abstraction to generate wizards in dsgui
 * @author  antonio
 */
public class Wizard extends javax.swing.JPanel {

    private WizardEvent eventHandler;
    //private Step steps = null;
    private Step currentStep = null;
    private String title;
    private boolean done=false;

    /** Creates new form Wizard with placeholder title*/
    public Wizard() {
        this("No Title for Wizard");
    }

    /**
     *  Creates new form Wizard with provided title and null steps
     * @param title Title of the Wizard
     */
    public Wizard(String title) {
        this(title, null);
    }

    /**
     *  Creates new Wizard with provided title and steps
     * @param title Title of the Wizard
     * @param steps Steps of the Wizard
     */
    public Wizard(String title, Step steps) {
        this.currentStep = steps;
        this.title = title;
        initComponents();
        initStatusPanel();
        initCfgPanel();
        updateButtons();
    }

    /**
     * 
     * @return current title of the wizard (null if not set)
     */
    public String getTitle() {
        return title;
    }

    /**
     * Sets (overwrites) the titel of this Wizard
     * @param title
     */
    public void setTitle(String title) {
        this.title = title;
    }
    
    /**
     *  Registers the eventhandler for this wizard
     * @param eventHandler
     */
    public void setEventHandler(WizardEvent eventHandler) {
        this.eventHandler = eventHandler;
    }
    
    /**
     *  Returns if the current wizard has finished (after calling the finish method 
     * or due to a cancel event
     * @return true if the wizard as finished.
     */
    public boolean isDone() {
        return done;
    }

//    /**
//     * 
//     * @return the current list of steps associated with this wizard
//     */
//    public Step getSteps(){
//        return this.steps;
//    }
    /**
     * 
     * @return the current step being displayed
     */
    public Step getCurrentStep() {
        return this.currentStep;
    }

    /**
     *  Initializes the right hand panel (cfgPanel) with the Panel in the Step
     */
    private void initCfgPanel() {
        //ystem.out.println("updating statusPanel");
        boolean thereIsMore = true;
        CardLayout cl = (CardLayout) this.cfgPanel.getLayout();
        Step tmpStep = this.currentStep.getFirst();
        while (thereIsMore) {
            this.cfgPanel.add(tmpStep, tmpStep.getTitle());
            //ystem.out.println("Adding card with title " + tmpStep.getTitle());
            if (tmpStep.isLast()) {
                thereIsMore = false;
            } else {
                tmpStep = tmpStep.getNext();
            }
        }
        cl.show(this.cfgPanel, this.currentStep.getTitle());
        this.titleLabel.setText(this.currentStep.getTitle());
        //ystem.out.println("Showing card with title " + this.currentStep.getTitle());
    }

//    private void initCfgPanel() {
//        GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
//        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
//        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
//        gridBagConstraints.weightx = 1.0;
//        gridBagConstraints.weighty = 1.0;
//        this.invalidate();
//        this.cfgPanel.removeAll();
//        this.cfgPanel.add(this.currentStep,gridBagConstraints);
//        this.titleLabel.setText(this.currentStep.getTitle());
//        this.validate();
//
//    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        emptyBottomPanel = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        statusPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        bgImage = new javax.swing.JLabel();
        rightPanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        linePanel1 = new javax.swing.JPanel();
        cfgPanel = new javax.swing.JPanel();
        horizontalEmptyPanelDark = new javax.swing.JPanel();
        horizontalEmptyPanelLight = new javax.swing.JPanel();
        horizontalSpacerPanel = new javax.swing.JPanel();
        prevButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        emptyBottomPanel.setOpaque(false);
        emptyBottomPanel.setLayout(new java.awt.GridBagLayout());

        setBackground(Step.DEFAULT_COLOR);
        setLayout(new java.awt.GridBagLayout());

        leftPanel.setBackground(new java.awt.Color(255, 255, 255));
        leftPanel.setPreferredSize(new java.awt.Dimension(150, 50));
        leftPanel.setLayout(new java.awt.GridBagLayout());

        statusPanel.setBackground(new java.awt.Color(255, 255, 255));
        statusPanel.setOpaque(false);
        statusPanel.setLayout(new java.awt.GridBagLayout());

        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("StepTitle");
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        statusPanel.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 5, 1, 5);
        leftPanel.add(statusPanel, gridBagConstraints);

        bgImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/symlabs/images/browserWizard.jpg"))); // NOI18N
        bgImage.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        leftPanel.add(bgImage, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 1, 5);
        add(leftPanel, gridBagConstraints);

        rightPanel.setBackground(Step.DEFAULT_COLOR);
        rightPanel.setLayout(new java.awt.GridBagLayout());

        titleLabel.setBackground(Step.DEFAULT_COLOR);
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        titleLabel.setText("Steps");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.ipady = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        rightPanel.add(titleLabel, gridBagConstraints);

        linePanel1.setBackground(new java.awt.Color(0, 0, 0));
        linePanel1.setFocusable(false);
        linePanel1.setMaximumSize(new java.awt.Dimension(32767, 1));
        linePanel1.setMinimumSize(new java.awt.Dimension(0, 1));
        linePanel1.setPreferredSize(new java.awt.Dimension(100, 1));
        linePanel1.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 4);
        rightPanel.add(linePanel1, gridBagConstraints);

        cfgPanel.setBackground(Step.DEFAULT_COLOR);
        cfgPanel.setLayout(new java.awt.CardLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        rightPanel.add(cfgPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 3, 5);
        add(rightPanel, gridBagConstraints);

        horizontalEmptyPanelDark.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderShadow"));
        horizontalEmptyPanelDark.setBorder(null);
        horizontalEmptyPanelDark.setMinimumSize(new java.awt.Dimension(4, 1));
        horizontalEmptyPanelDark.setPreferredSize(new java.awt.Dimension(1, 1));
        horizontalEmptyPanelDark.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        add(horizontalEmptyPanelDark, gridBagConstraints);

        horizontalEmptyPanelLight.setBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.borderHighlight"));
        horizontalEmptyPanelLight.setBorder(null);
        horizontalEmptyPanelLight.setMinimumSize(new java.awt.Dimension(4, 1));
        horizontalEmptyPanelLight.setPreferredSize(new java.awt.Dimension(1, 1));
        horizontalEmptyPanelLight.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        add(horizontalEmptyPanelLight, gridBagConstraints);

        horizontalSpacerPanel.setBackground(Step.DEFAULT_COLOR);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 12.0;
        add(horizontalSpacerPanel, gridBagConstraints);

        prevButton.setText("Prev");
        prevButton.setEnabled(this.currentStep.isFirst().equals(false));
        prevButton.setMaximumSize(new java.awt.Dimension(73, 23));
        prevButton.setMinimumSize(new java.awt.Dimension(73, 23));
        prevButton.setPreferredSize(new java.awt.Dimension(73, 23));
        prevButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prevButtonClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 3, 0);
        add(prevButton, gridBagConstraints);

        nextButton.setText(this.currentStep.isLast()?"Finish":"Next");
        nextButton.setMaximumSize(new java.awt.Dimension(73, 23));
        nextButton.setMinimumSize(new java.awt.Dimension(73, 23));
        nextButton.setPreferredSize(new java.awt.Dimension(73, 23));
        nextButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextButtonClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 3, 0);
        add(nextButton, gridBagConstraints);

        cancelButton.setText("Cancel");
        cancelButton.setMaximumSize(new java.awt.Dimension(73, 23));
        cancelButton.setMinimumSize(new java.awt.Dimension(73, 23));
        cancelButton.setPreferredSize(new java.awt.Dimension(73, 23));
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 3, 5);
        add(cancelButton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    private void prevButtonClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prevButtonClicked
        if (this.prevButton.isEnabled()) {
            java.util.HashMap<String, Object> parameters;
            parameters = this.currentStep.getParameters();
            this.currentStep = this.currentStep.getPrevious();
            this.currentStep.setParameters(parameters);
            this.updateButtons();
            this.initStatusPanel();
            this.initCfgPanel();
        }
    }//GEN-LAST:event_prevButtonClicked

    private void nextButtonClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextButtonClicked
        if (this.currentStep.isLast()) {
            if (this.currentStep.finish()){
              this.done=true;
              if (this.eventHandler != null){
                  this.eventHandler.onFinish();
              }
            }              
        } else {
            java.util.HashMap<String, Object> parameters;
            parameters = this.currentStep.getParameters();

            this.currentStep = this.currentStep.getNext();
            this.currentStep.setParameters(parameters);
        }
        this.updateButtons();
        this.initStatusPanel();
        this.initCfgPanel();
        
    }//GEN-LAST:event_nextButtonClicked

    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked
        this.done=true;
        if (this.eventHandler != null) {
            this.eventHandler.onCancel();
        }
    }//GEN-LAST:event_cancelButtonMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bgImage;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel cfgPanel;
    private javax.swing.JPanel emptyBottomPanel;
    private javax.swing.JPanel horizontalEmptyPanelDark;
    private javax.swing.JPanel horizontalEmptyPanelLight;
    private javax.swing.JPanel horizontalSpacerPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JPanel linePanel1;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton prevButton;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JPanel statusPanel;
    private javax.swing.JLabel titleLabel;
    // End of variables declaration//GEN-END:variables

    /**
     *   Initializes the Status Panel (left hand side of the main window) with the names
     * steps in this wizard. 
     */
    private void initStatusPanel() {
        statusPanel.removeAll();
        statusPanel.invalidate();
        //ystem.out.println("updating statusPanel");
        ArrayList<String> prevTitles, nextTitles;
        prevTitles = new ArrayList<String>();
        nextTitles = new ArrayList<String>();
        nextTitles = this.currentStep.getNextTitles(nextTitles);
        prevTitles = this.currentStep.getPreviousTitles(prevTitles);
        GridBagConstraints gridBagConstraints;
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
//        gridBagConstraints.weighty=1.0;

        javax.swing.JLabel newTitleLabel = null;
        int counter = 1;
        // The last element in prevTitles is the title of current step, so we skip it.
        for (int i = 0; i < (prevTitles.size() - 1); i++) {
            newTitleLabel = new javax.swing.JLabel();
            newTitleLabel.setForeground(new java.awt.Color(0, 0, 0));
            newTitleLabel.setText("" + counter++ + ".  " + prevTitles.get(i));
            newTitleLabel.setToolTipText(prevTitles.get(i));
            //ystem.out.println("added prev title:" + newTitleLabel.getText());
            newTitleLabel.addMouseListener(new java.awt.event.MouseAdapter() {

                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    titleLabelClicked(evt);
                }
            });
            statusPanel.add(newTitleLabel, gridBagConstraints);
        }

        // Now the current Title
        newTitleLabel = new javax.swing.JLabel();
        newTitleLabel.setForeground(new java.awt.Color(0, 0, 255));
        newTitleLabel.setText("" + counter++ + ".  " + this.currentStep.getTitle());
        //ystem.out.println("added current  title:" + newTitleLabel.getText());
        newTitleLabel.setToolTipText(this.currentStep.getTitle());
        newTitleLabel.addMouseListener(new java.awt.event.MouseAdapter() {

                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    titleLabelClicked(evt);
                }
            });
        statusPanel.add(newTitleLabel, gridBagConstraints);

        // The first element in prevTitles is the title of current step, so we skip it.
        for (int i = 1; i < (nextTitles.size()); i++) {
            newTitleLabel = new javax.swing.JLabel();
            newTitleLabel.setForeground(new java.awt.Color(128, 128, 128));
            newTitleLabel.setText("" + counter++ + ".  " + nextTitles.get(i));
            //ystem.out.println("adde next title:" + newTitleLabel.getText());
            newTitleLabel.setToolTipText(nextTitles.get(i));
            newTitleLabel.addMouseListener(new java.awt.event.MouseAdapter() {

                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    titleLabelClicked(evt);
                }
            });
            statusPanel.add(newTitleLabel, gridBagConstraints);
        }
        // Now we add an spacer to push the titles up.
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weighty=1.0;
        this.statusPanel.add(this.emptyBottomPanel, gridBagConstraints);

//        statusPanel.paintImmediately(this.getBounds());
        statusPanel.validate();
    }

    private void titleLabelClicked(MouseEvent evt) {
        java.util.HashMap<String, Object> parameters;
        Step tmpStep=this.currentStep.getFirst();
        javax.swing.JLabel clickedLabel = (JLabel) evt.getSource();
        String labelName = clickedLabel.getToolTipText();
        parameters = this.currentStep.getParameters();

        CardLayout cl = (CardLayout) this.cfgPanel.getLayout();
        cl.show(this.cfgPanel, labelName);
        while (tmpStep != null) {
            if (tmpStep.getTitle().equals(labelName)) {
                this.currentStep = tmpStep;
                this.currentStep.setParameters(parameters);
                this.initCfgPanel();
                this.initStatusPanel();
                this.updateButtons();
                tmpStep = null;
            } else {
                tmpStep = tmpStep.getNext();
            }
        }
                    
    }
    private void updateButtons() {
        nextButton.setText(this.currentStep.isLast() ? "Last" : "Next");
        prevButton.setEnabled(this.currentStep.isFirst().equals(false));

    }
}
